#file(access=pub)

import .win32;
import .unix;

int strlen(const char* s) {
    if !s  return 0;
    return as(int) istrlen(s);
}
prv native("strlen") isize istrlen(const char* s);

void print(const char* s, int length) {
#if OS_GROUP_WINDOWS
    void* handle = win32.GetStdHandle(-11);
    uint32 num_written;
    win32.WriteFile(handle, s, as(uint32) length, &num_written, null);
#elif OS_GROUP_UNIX
    unix.write(1, s, as(usize) length);
#endif
}

void print(const char* s) {
    print(s, strlen(s));
}

void println(const char* s) {
    print(s);
    print("\n");
}

void print(int value) {
    if value < 0 {
        print("-");
        value = -value;
    }

    print(as(uint64) value);
}

void print(uint64 value) {

    const int BufferSize = 21;
    char[BufferSize] buffer;
    char* ptr = uint64_to_chars(value, buffer + BufferSize - 1);
    
    int length = as(int) ((buffer + BufferSize) - ptr);
    print(ptr, length);
}