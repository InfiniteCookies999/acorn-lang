#file(access=pub)

import .win32;

void exit(int exit_code) {
    win32.ExitProcess(as(uint32) exit_code);
}

// Used to keep track of time.
prv int64 performance_freq;

int64 time_in_nanosecs() {
#if OS_GROUP_WINDOWS
    if performance_freq == 0 {
        win32.QueryPerformanceFrequency(&performance_freq);
    }
    int64 current;
    win32.QueryPerformanceCounter(&current);
    return as(int64) ((as(float64) (current * 1E+9) / performance_freq));
#elif OS_GROUP_UNIX
    return 0;
#endif
}

int64 time_in_millisecs() {
    return time_in_nanosecs() / as(int64) 1e+6;
}