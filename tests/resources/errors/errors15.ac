import std;
import std.Error;

struct TestError :: *Error {
    const char* get_name() const {
        return "TestError";
    }
    const char* get_message() const {
        return "error raised!";
    }
}

void write_val(int val) {

#if OS_GROUP_WINDOWS
    void* handle = std.GetStdHandle(-11);
    uint32 written;
    char c = as(char) val;
    std.WriteFile(handle, &c, 1, &written, null);
#elif OS_GROUP_UNIX
    char c = as(char) val;
    std.write(1, &c, 1);
#endif

}

int foo() raises TestError {
    raise TestError{};
}

void main() {
    int a = 38;
    a = try foo() {
        std.print("caught 1");
        recover 64;
    };

    write_val(a);

    a += try foo() {
        std.print("caught 2");
        recover 30;
    };

    write_val(a);

}