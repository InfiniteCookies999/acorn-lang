
#if OS_GROUP_WINDOWS

native dllimport void* GetStdHandle(uint32 nStdHandle);

native dllimport int32 WriteFile(void*       hFile,
                                 const void* lpBuffer,
                                 uint32      nNumberOfBytesToWrite,
                                 uint32*     lpNumberOfBytesWritten,
                                 void*       lpOverlapped);

#elif OS_GROUP_UNIX

native isize write(int32 fd, const void* buf, usize count);

#endif

void print(const char* s, int length) {
#if OS_GROUP_WINDOWS
    void* handle = GetStdHandle(-11);
    uint32 written;
    WriteFile(handle, s, as(uint32) length, &written, null);
#elif OS_GROUP_UNIX
    write(1, s, as(usize) length);
#endif
}

enum En {
    A = "I love coffeeee1 ",
    B = "I love coffeeee2 ",
    C = "I love coffeeee3 ",
    D = "I love coffeeee4 "
}

void main() {
    En e1 = En.A;
    print(e1, 17);

    En e2 = En.B;
    print(e2, 17);
    
    En e3 = En.C;
    print(e3, 17);

    En e4 = En.D;
    print(e4, 17);
}