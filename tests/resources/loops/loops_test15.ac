

#if OS_GROUP_WINDOWS

native dllimport void* GetStdHandle(uint32 nStdHandle);

native dllimport int32 WriteFile(void*       hFile,
                                 const void* lpBuffer,
                                 uint32      nNumberOfBytesToWrite,
                                 uint32*     lpNumberOfBytesWritten,
                                 void*       lpOverlapped);

#elif OS_GROUP_UNIX

native isize write(int32 fd, const void* buf, usize count);

#endif

void write_val(int val) {

#if OS_GROUP_WINDOWS
    void* handle = GetStdHandle(-11);
    uint32 written;
    char c = as(char) val;
    WriteFile(handle, &c, 1, &written, null);
#elif OS_GROUP_UNIX
    char c = as(char) val;
    write(1, &c, 1);
#endif

}

struct A {
    int v1;
    int v2;
    int v3;

    copyobj A(A* o) {
        v1 = o.v1 + 1;
        v2 = o.v2 + 1;
        v3 = o.v3 + 1;
    }
}

void main() {
    A[2] arr = [ A{79,104,121}, A{121,96,32} ];
    loop A a : arr {
        write_val(a.v1);
        write_val(a.v2);
        write_val(a.v3);
    }
}