
#if OS_GROUP_WINDOWS

native dllimport fn GetStdHandle(nStdHandle: uint32) -> void*;

native dllimport fn WriteFile(hFile:                  void*,
                              lpBuffer:               const void*,
                              nNumberOfBytesToWrite:  uint32,
                              lpNumberOfBytesWritten: uint32*,
                              lpOverlapped:           void*
                              ) -> int32;

#elif OS_GROUP_UNIX

native fn write(fd: int32, buf: const void*, count: usize) -> isize;

#endif

fn print(s: const char*, length: int) {
#if OS_GROUP_WINDOWS
    handle: void* = GetStdHandle(-11);
    written: uint32;
    WriteFile(handle, s, as(uint32) length, &written, null);
#elif OS_GROUP_UNIX
    write(1, s, as(usize) length);
#endif
}

enum Day {
    MONDAY,
    TUESDAY,
    WEDNESDAY,
    THURSDAY,
    FRIDAY,
    SATURDAY,
    SUNDAY
}

fn foo(day: Day) {
    switch (day) {
    case TUESDAY ..= FRIDAY:
        print("case 1", 6);
    case MONDAY:
        print("case 2", 6);
    case SATURDAY:
        print("case 3", 6);
    case SUNDAY:
        print("case 4", 6);
    }
}

fn main() {
    foo(Day.MONDAY);
    foo(Day.TUESDAY);
    foo(Day.THURSDAY);
    foo(Day.FRIDAY);
    foo(Day.SUNDAY);
}
