
#if OS_GROUP_WINDOWS

native dllimport void* GetStdHandle(uint32 nStdHandle);

native dllimport int32 WriteFile(void*       hFile,
                                 const void* lpBuffer,
                                 uint32      nNumberOfBytesToWrite,
                                 uint32*     lpNumberOfBytesWritten,
                                 void*       lpOverlapped);

#elif OS_GROUP_UNIX

native isize write(int32 fd, const void* buf, usize count);

#endif

void write_val(int32 val) {

#if OS_GROUP_WINDOWS
    void* handle = GetStdHandle(-11);
    uint32 written;
    char c = as(char) val;
    WriteFile(handle, &c, 1, &written, null);
#elif OS_GROUP_UNIX
    char c = as(char) val;
    write(1, &c, 1);
#endif

}

struct A {
    int v;

    int32[8] foo() {
        int32[8] a = [ 76, 101, 116, 115, 32, 103, 111, 33 ];
        return a;
    }
}

void main() {
    A a;
    int32[8] arr = a.foo();

    write_val(arr[0]);
    write_val(arr[1]);
    write_val(arr[2]);
    write_val(arr[3]);
    write_val(arr[4]);
    write_val(arr[5]);
    write_val(arr[6]);
    write_val(arr[7]);
}