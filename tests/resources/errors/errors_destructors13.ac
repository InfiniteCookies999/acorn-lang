import std;
import std.Error;

struct TestError1 :: *Error {
    const fn get_name() -> const char* {
        return "TestError1";
    }
    const fn get_message() -> const char* {
        return "error raised!";
    }

    fn delete() {
        std.print("destructor called 1!");
    }
}

struct TestError2 :: *Error {
    const fn get_name() -> const char* {
        return "TestError2";
    }
    const fn get_message() -> const char* {
        return "raised error!";
    }
}

fn foo(b: bool) | raises TestError1, TestError2 {
    if (b) {
        raise TestError1{};
    } else {
        raise TestError2{};
    }
}

fn main() {
    try err: (foo(true)) {
        std.print("caught error!");
    };
    std.print("...");
    try err: (foo(false)) {
        std.print("caught error!");
    };
    std.print("end!");
}
