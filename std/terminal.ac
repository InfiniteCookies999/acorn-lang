#file(access=pub)

import .win32;
import .unix;

void print(const char* s, int length) {
#if OS_GROUP_WINDOWS
    void* handle = win32.GetStdHandle(-11);
    uint32 num_written;
    win32.WriteFile(handle, s, as(uint32) length, &num_written, null);
#elif OS_GROUP_UNIX
    unix.write(1, s, as(usize) length);
#endif
}

void print(const char* s) {
    print(s, strlen(s));
}

void print(String^ s) {
    print(s.buffer, s.length);
}

void print(int value, int base=10) {
    if value < 0 {
        print("-");
        value = -value;
    }

    print(as(uint64) value, base);
}

void print(uint64 value, int base=10) {

    const BUFFER_SIZE = 21;
    char[BUFFER_SIZE] buffer = ---;
    char* ptr = uint64_to_chars(value, buffer + BUFFER_SIZE - 1, base);
    
    int length = as(int) ((buffer + BUFFER_SIZE) - ptr);
    print(ptr, length);
}

void print(char c) {
    print(&c, 1);
}

void print(bool b) {
    if b {
        print("true", 4);
    } else {
        print("false", 5);
    }
}

// -- println functions
// 

void println(const char* s) {
    print(s);
    print("\n");
}

void println(int value, int base=10) {
    print(value, base);
    print("\n");
}

void println(uint64 value, int base=10) {
    print(value, base);
    print("\n");
}

void println(char c) {
    print(c);
    print("\n");
}

void println(bool b) {
    print(b);
    print("\n");
}

void println(String^ s) {
    print(s);
    print("\n");
}