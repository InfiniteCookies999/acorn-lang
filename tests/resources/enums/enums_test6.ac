
#if OS_GROUP_WINDOWS

native dllimport void* GetStdHandle(uint32 nStdHandle);

native dllimport int32 WriteFile(void*       hFile,
                                 const void* lpBuffer,
                                 uint32      nNumberOfBytesToWrite,
                                 uint32*     lpNumberOfBytesWritten,
                                 void*       lpOverlapped);

#elif OS_GROUP_UNIX

native isize write(int32 fd, const void* buf, usize count);

#endif

void write_val(int val) {

#if OS_GROUP_WINDOWS
    void* handle = GetStdHandle(-11);
    uint32 written;
    char c = as(char) val;
    WriteFile(handle, &c, 1, &written, null);
#elif OS_GROUP_UNIX
    char c = as(char) val;
    write(1, &c, 1);
#endif

}

enum En {
    A = 55,
    B = 56,
    C = 57,
    D = 58
}

void main() {

    En e1 = En.A;
    En[int] v1 = e1 + 10;
    write_val(as(int) v1);

    En e2 = En.B;
    En[int] v2 = e2 + 10;
    write_val(as(int) v2);

    En e3 = En.C;
    En[int] v3 = e3 + 10;
    write_val(as(int) v3);

    En e4 = En.D;
    En[int] v4 = e4 + 10;
    write_val(as(int) v4);

}