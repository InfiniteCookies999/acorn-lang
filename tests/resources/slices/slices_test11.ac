
#if OS_GROUP_WINDOWS

native dllimport void* GetStdHandle(uint32 nStdHandle);

native dllimport int32 WriteFile(void*       hFile,
                                 const void* lpBuffer,
                                 uint32      nNumberOfBytesToWrite,
                                 uint32*     lpNumberOfBytesWritten,
                                 void*       lpOverlapped);

#elif OS_GROUP_UNIX

native isize write(int32 fd, const void* buf, usize count);

#endif

void write_val(int val) {

#if OS_GROUP_WINDOWS
    void* handle = GetStdHandle(-11);
    uint32 written;
    char c = as(char) val;
    WriteFile(handle, &c, 1, &written, null);
#elif OS_GROUP_UNIX
    char c = as(char) val;
    write(1, &c, 1);
#endif

}

int[..] get_slice(int[4] a, bool t) {
    int[..] s = a;

    if t {
        return s;
    }

    return s;
}

void main() {

    int[4] a1 = [ 76, 101, 116, 115 ];
    int[4] a2 = [ 32, 103, 111, 33 ];

    int[..] s1 = get_slice(a1, true);
    int[..] s2 = get_slice(a2, false);

    write_val(s1[0]);
    write_val(s1[1]);
    write_val(s1[2]);
    write_val(s1[3]);
    write_val(s2[0]);
    write_val(s2[1]);
    write_val(s2[2]);
    write_val(s2[3]);
}