
#if OS_GROUP_WINDOWS

native dllimport void* GetStdHandle(uint32 nStdHandle);

native dllimport int32 WriteFile(void*       hFile,
                                 const void* lpBuffer,
                                 uint32      nNumberOfBytesToWrite,
                                 uint32*     lpNumberOfBytesWritten,
                                 void*       lpOverlapped);

#elif OS_GROUP_UNIX

native isize write(int32 fd, const void* buf, usize count);

#endif

void write_val(int val) {

#if OS_GROUP_WINDOWS
    void* handle = GetStdHandle(-11);
    uint32 written;
    char c = as(char) val;
    WriteFile(handle, &c, 1, &written, null);
#elif OS_GROUP_UNIX
    char c = as(char) val;
    write(1, &c, 1);
#endif

}

enum En {
    A = 65,
    B = 66,
    C = 67,
    D = 68
}

void main() {
    En e1 = En.A;
    write_val(e1);

    En e2 = En.B;
    write_val(e2);

    En e3 = En.C;
    write_val(e3);

    En e4 = En.D;
    write_val(e4);
}