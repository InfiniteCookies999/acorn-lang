import std;
import std.Error;

struct TestError :: *Error {
    const fn get_name() -> const char* {
        return "TestError";
    }
    const fn get_message() -> const char* {
        return "error raised!";
    }
}

struct A {
    v: int8;
    fn delete() {
        std.print("deconstructor called!");
    }
}

fn foo(b: bool) -> A | raises TestError {
    if (b) {
        raise TestError{};
    } else {
        return A{ 64 };
    }
}

fn main() {
    try (foo(false)) {
        return;
    };
    std.print("...");
    try (foo(true)) {
        std.print("caught error!");
        return;
    };
    std.print("not reached");
}
