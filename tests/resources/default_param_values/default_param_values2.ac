
#if OS_GROUP_WINDOWS

native dllimport fn GetStdHandle(nStdHandle: uint32) -> void*;

native dllimport fn WriteFile(hFile:                  void*,
                              lpBuffer:               const void*,
                              nNumberOfBytesToWrite:  uint32,
                              lpNumberOfBytesWritten: uint32*,
                              lpOverlapped:           void*
                              ) -> int32;

#elif OS_GROUP_UNIX

native fn write(fd: int32, buf: const void*, count: usize) -> isize;

#endif

fn write_val(val: int) {

#if OS_GROUP_WINDOWS
    handle: void* = GetStdHandle(-11);
    written: uint32;
    c: char = as(char) val;
    WriteFile(handle, &c, 1, &written, null);
#elif OS_GROUP_UNIX
    c: char = as(char) val;
    write(1, &c, 1);
#endif

}

fn foo(a: int, b: int = 98, c: int = 99) {
    write_val(a);
    write_val(b);
    write_val(c);
}

fn main() {
    foo(97);
    foo(97, 105);
    foo(97, 105, 106);
    foo(a=97);
    foo(a=97, b=105, c=106);
    foo(97, b=105, c=106);
    foo(97, b=105);
    foo(97, c=106);
}