import std;
import std.Error;

void write_val(int8 val) {

#if OS_GROUP_WINDOWS
    void* handle = std.GetStdHandle(-11);
    uint32 written;
    char c = as(char) val;
    std.WriteFile(handle, &c, 1, &written, null);
#elif OS_GROUP_UNIX
    char c = as(char) val;
    std.write(1, &c, 1);
#endif

}

struct TestError :: *Error {
    const char* get_name() const {
        return "TestError";
    }
    const char* get_message() const {
        return "error raised!";
    }
}

struct A {
    int8 v;
}

A foo(bool cond) raises TestError {
    if cond {
        return A{ 64 };
    }

    raise TestError{};
}

void main() {
    A$(bool)(raises TestError) f = foo;
    A a = try f(true);
    write_val(a.v);
    try f(false);
}