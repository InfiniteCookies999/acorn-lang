
#if OS_GROUP_WINDOWS

native dllimport fn GetStdHandle(nStdHandle: uint32) -> void*;

native dllimport fn WriteFile(hFile:                  void*,
                              lpBuffer:               const void*,
                              nNumberOfBytesToWrite:  uint32,
                              lpNumberOfBytesWritten: uint32*,
                              lpOverlapped:           void*
                              ) -> int32;

#elif OS_GROUP_UNIX

native fn write(fd: int32, buf: const void*, count: usize) -> isize;

#endif

fn print(s: const char*, length: int) {
#if OS_GROUP_WINDOWS
    handle: void* = GetStdHandle(-11);
    written: uint32;
    WriteFile(handle, s, as(uint32) length, &written, null);
#elif OS_GROUP_UNIX
    write(1, s, as(usize) length);
#endif
}

fn main() {
    a: int = 4;
    b: int* = &a;

    if (b) {
        print("Ptr Not Null Case1", 18);
    }

    c: int* = null;
    if (c) {
        print("Ptr Null Case1", 14);
    }
    if (null) {
        print("Ptr Null Case2", 14);
    }

    if (b != null) {
        print("Ptr Not Null Case2", 18);
    }

    if (null != b) {
        print("Ptr Not Null Case3", 18);
    }
}
