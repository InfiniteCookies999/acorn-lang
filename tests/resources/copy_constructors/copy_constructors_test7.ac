
#if OS_GROUP_WINDOWS

native dllimport void* GetStdHandle(uint32 nStdHandle);

native dllimport int32 WriteFile(void*       hFile,
                                 const void* lpBuffer,
                                 uint32      nNumberOfBytesToWrite,
                                 uint32*     lpNumberOfBytesWritten,
                                 void*       lpOverlapped);

#elif OS_GROUP_UNIX

native isize write(int32 fd, const void* buf, usize count);

#endif

void print(const char* s, int length) {
#if OS_GROUP_WINDOWS
    void* handle = GetStdHandle(-11);
    uint32 written;
    WriteFile(handle, s, as(uint32) length, &written, null);
#elif OS_GROUP_UNIX
    write(1, s, as(usize) length);
#endif
}

struct A {
    const char* m;

    copyobj A(A* c) {
        print(c.m, 8);
    }
}

A foo(bool t) {
    A a1;
    a1.m = "called1 ";
    A a2;
    a2.m = "called2 ";

    if t {
        return a1;
    }

    return a2;
}

void main() {
    A a1 = foo(true);
    A a2 = foo(false);
}